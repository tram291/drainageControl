;====================================================================
; Main.asm file generated by New Project wizard
;
; Created: T3 Thg5 11 2021
; Processor: AT89C52
; Compiler: ASEM-51 (Proteus)
;====================================================================
$NOMOD51
$INCLUDE (80C52.MCU)

	 org 0000h
	 LJMP main
	 org 0023h
	 LJMP PUSH_QUEUE
	 
main:
      MOV 22H, #030H
      MOV R7, #80
 CLR_S:
      MOV R0, 22H
     MOV @R0, #0
     INC 22H
     DJNZ R7, CLR_S
   MOV 20H, #0 ; BIEN DEM SO PHAN TU CHUOI
   CLR P1.7; BAT TAT BANG LED
   CLR P1.6; DEFAULT/SPECIAL MODE(0/1)
   MOV 21H, #36H; DIA CHI GHI VAO QUEUE
   setb EA
   setb ES
   setb EX0
   setb EX1
   MOV TMOD, #20H
   MOV TH1, #0FDH
   MOV SCON, #50H
   CLR TI
   SETB TR1
   AGAIN:
   JB P1.7, BATCTRINH
   JMP AGAIN
   BATCTRINH:
      JB P1.6, SPECIALMODE
      LCALL CTRINH
      LJMP AGAIN
      SPECIALMODE:
	 LCALL CTRINH_2
   JMP AGAIN
	 
;============================================
PUSH_QUEUE:
      CLR RI
      MOV A, SBUF
      CJNE A, #'!', NEXT ;NUT ON
      MOV 1FH, #48D
      MOV DPTR, #Bitmap
      SETB p1.7
      CLR P1.6
      RETI
     
      NEXT:
     CJNE A, #'?', NEXT1 ;NUT OFF
     CLR P1.7
     CLR P1.6
     MOV P2, #0FFH
     RETI
    
      NEXT1:
     CJNE A, #'=', NEXT2 ; NUT ENTER
     SETB P1.6
     SETB P1.7
     MOV 1FH, #8H
     RETI
     
    NEXT2:
    CJNE A, #'-', NEXT3 ; NUT BACKSPACE
    DEC 21H
    MOV R1, 21H
     MOV @R1, #0
     CLR P1.7
     CLR P1.6
     RETI
    
     NEXT3:
     CJNE A, #'~', NEXT4; NUT DELETE ALL
      MOV 22H, #030H ;địa chỉ để clear stack
      MOV R7, #80
 CLR_STACK:
      MOV R0, 22H
     MOV @R0, #0
     INC 22H
     DJNZ R7, CLR_STACK
     CLR P1.7
     CLR P1.6
     MOV P2, #0FFH
     MOV 21H, #36H
     MOV 20H, #0
     MOV 08H, #30H; DIA CHI NEN DE DOC RA
     RETI
    
     NEXT4:
     MOV R1, 21H
     MOV @R1, A
     INC 21H
     INC 20H
     CLR P1.7
     CLR P1.6
     RETI
	 

;============================================

;/////////////////////chuong trinh default mode////////////////////////
CTRINH:
   mov r4,#1
   LOOP1: MOV R3, #150 ;do dai chuoi quet theo cot
   LOOP2: mov r2,#12
   quet: lcall Display
   JB P1.7, CT
   LJMP AGAIN
CT:
   JNB P1.6, CT_NEXT
   LJMP AGAIN
CT_NEXT:
   djnz r2,quet
   INC DPTR
   djnz r3,LOOP2
   djnz r4,LOOP1
   RET
;/////////////////////chuong trinh special mode////////////////////////   
CTRINH_2:
   MOV 08H, #030H
   mov r4,#1
   MOV A, 20H
   ADD A, #12
   LOOP11: MOV R3, A ;do dai chuoi quet theo cot
   LOOP21: mov r2,#20
   quet2: lcall Display
   JB P1.7, CT_2
   RET
CT_2:
   JB P1.6, CT_NEXT2
   LJMP AGAIN
CT_NEXT2:
   djnz r2,quet2
   inc 08H
   djnz r3,LOOP21
   djnz r4,LOOP11
   RET

SOSANH:
MOV A, @R1 ; R1 LA OFFSET CUA CAC PHAN TU
CJNE A, #'A', NEXT_B
MOV DPTR, #BIT_A
RET
NEXT_B:
CJNE A, #'B', NEXT_C1
MOV DPTR, #BIT_B
RET
NEXT_C1:
CJNE A, #'C', NEXT_D
MOV DPTR, #BIT_C
RET
NEXT_D:
CJNE A, #'D', NEXT_E
MOV DPTR, #BIT_D
RET
NEXT_E:
CJNE A, #'E', NEXT_F
MOV DPTR, #BIT_E
RET
NEXT_F:
CJNE A, #'F', NEXT_G
MOV DPTR, #BIT_F
RET
NEXT_G:
CJNE A, #'G', NEXT_H
MOV DPTR, #BIT_G
RET
NEXT_H:
CJNE A, #'H', NEXT_I
MOV DPTR, #BIT_H
RET
NEXT_I:
CJNE A, #'I', NEXT_J
MOV DPTR, #BIT_I
RET
NEXT_J:
CJNE A, #'J', NEXT_K
MOV DPTR, #BIT_J
RET
NEXT_K:
CJNE A, #'K', NEXT_L
MOV DPTR, #BIT_K
RET
NEXT_L:
CJNE A, #'L', NEXT_M
MOV DPTR, #BIT_L
RET
NEXT_M:
CJNE A, #'M', NEXT_N
MOV DPTR, #BIT_M
RET
NEXT_N:
CJNE A, #'N', NEXT_O
MOV DPTR, #BIT_N
RET
NEXT_O:
CJNE A, #'O', NEXT_P
MOV DPTR, #BIT_O
RET
NEXT_P:
CJNE A, #'P', NEXT_Q
MOV DPTR, #BIT_P
RET
NEXT_Q:
CJNE A, #'Q', NEXT_R
MOV DPTR, #BIT_Q
RET
NEXT_R:
CJNE A, #'R', NEXT_S
MOV DPTR, #BIT_R
RET
NEXT_S:
CJNE A, #'S', NEXT_T
MOV DPTR, #BIT_S
RET
NEXT_T:
CJNE A, #'T', NEXT_U
MOV DPTR, #BIT_T
RET
NEXT_U:
CJNE A, #'U', NEXT_V
MOV DPTR, #BIT_U
RET
NEXT_V:
CJNE A, #'V', NEXT_W
MOV DPTR, #BIT_V
RET
NEXT_W:
CJNE A, #'W', NEXT_X
MOV DPTR, #BIT_W
RET
NEXT_X:
CJNE A, #'X', NEXT_Y
MOV DPTR, #BIT_X
RET
NEXT_Y:
CJNE A, #'Y', NEXT_Z
MOV DPTR, #BIT_Y
RET
NEXT_Z:
CJNE A, #'Z', NEXT_0
MOV DPTR, #BIT_Z
RET
NEXT_0:
CJNE A, #'0', NEXT_1
MOV DPTR, #BIT_0
RET
NEXT_1:
CJNE A, #'1', NEXT_2
MOV DPTR, #BIT_1
RET
NEXT_2:
CJNE A, #'2', NEXT_3
MOV DPTR, #BIT_2
RET
NEXT_3:
CJNE A, #'3', NEXT_4
MOV DPTR, #BIT_3
RET
NEXT_4:
CJNE A, #'4', NEXT_5
MOV DPTR, #BIT_4
RET
NEXT_5:
CJNE A, #'5', NEXT_6
MOV DPTR, #BIT_5
RET
NEXT_6:
CJNE A, #'6', NEXT_7
MOV DPTR, #BIT_6
RET
NEXT_7:
CJNE A, #'7', NEXT_8
MOV DPTR, #BIT_7
RET
NEXT_8:
CJNE A, #'8', NEXT_9
MOV DPTR, #BIT_8
RET
NEXT_9:
CJNE A, #'9', DEF
MOV DPTR, #BIT_9
RET
DEF:
MOV DPTR, #BIT_EMPTY
RET
;/////////////////////////Display/////////////////////
Display: 
   MOV R5, #6
   MOV R1, 08H
   LOP5:
      JNB P1.6, LOP5_C ;TRONG DEFAULT MODE SE SKIP DONG NAY
      LCALL SOSANH
LOP5_C:
   mov r0,#0
   mov r6,1FH 
   hang0:
      mov a,r0
      movc a,@a+dptr
      mov c,0e0h ;L?y giá tr? bit ð?u tiên c?a thanh ghi acc ghi vào c? nh?
      mov p1.1,c ;data
      inc r0
      setb p1.2 ;CLK
      clr p1.2
      djnz r6,hang0
      JNB P1.6, CON0
      INC R1
      DJNZ R5, LOP5
CON0:
      setb p1.0 ;RC Ch?t d? li?u
      clr p1.0
      mov p2,#07h
      lcall delay
      mov p2,#0ffh
      
      MOV R5, #6
      MOV R1, 08H
   LOP6:
      JNB P1.6, LOP6_C
      LCALL SOSANH
LOP6_C:
      mov r0,#0
      mov r6,1FH 
   JB P1.7, hang1
   RET
   hang1: 
      mov a,r0
      movc a,@a+dptr
      mov c,0e1h
      mov p1.1,c ;data
      inc r0
      setb p1.2 ;CLK
      clr p1.2
      djnz r6,hang1
      JNB P1.6, CON1
      INC R1
      DJNZ R5, LOP6
CON1:
      setb p1.0 ;RC
      clr p1.0
      mov p2,#06h
      lcall delay
      mov p2,#0ffh
      
      MOV R5, #6
      MOV R1, 08H
   LOP7:
      JNB P1.6, LOP7_C
      LCALL SOSANH
LOP7_C:
      mov r0,#0
      mov r6,1FH
   JB P1.7, hang2
   RET
   hang2: 
      mov a,r0
      movc a,@a+dptr
      mov c,0e2h
      mov p1.1,c ;data
      inc r0
      setb p1.2 ;CLK
      clr p1.2
      djnz r6,hang2
      JNB P1.6, CON2
      INC R1
      DJNZ R5, LOP7
CON2:
      setb p1.0 ;RC
      clr p1.0
      mov p2,#05h
      lcall delay
      mov p2,#0ffh
      
      MOV R5, #6
      MOV R1, 08H
   LOP8:
      JNB P1.6, LOP8_C
      LCALL SOSANH
LOP8_C:
      mov r0,#0
      mov r6,1FH 
   JB P1.7, hang3
   RET
   hang3: 
      mov a,r0
      movc a,@a+dptr
      mov c,0e3h
      mov p1.1,c ;data
      inc r0
      setb p1.2 ;CLK
      clr p1.2
      djnz r6,hang3
      JNB P1.6, CON3
      INC R1
      DJNZ R5, LOP8
CON3:
      setb p1.0 ;RC
      clr p1.0
      mov p2,#04h
      lcall delay
      mov p2,#0ffh
      
      MOV R5, #6
      MOV R1, 08H
   LOP9:
      JNB P1.6, LOP9_C
      LCALL SOSANH
LOP9_C:
      mov r0,#0
      mov r6,1FH 
   JB P1.7, hang4
   RET
   hang4: 
      mov a,r0
      movc a,@a+dptr
      mov c,0e4h
      mov p1.1,c ;data
      inc r0
      setb p1.2 ;CLK
      clr p1.2
      djnz r6,hang4
      JNB P1.6, CON4
      INC R1
      DJNZ R5, LOP9
CON4:
      setb p1.0 ;RC
      clr p1.0
      mov p2,#03h
      lcall delay
      mov p2,#0ffh
      
      MOV R5, #6
      MOV R1, 08H
   LOP10:
      JNB P1.6, LOP10_C
      LCALL SOSANH
LOP10_C:
      mov r0,#0
      mov r6,1FH 
   JB P1.7, hang5
   ret
   hang5: 
      mov a,r0
      movc a,@a+dptr
      mov c,0e5h
      mov p1.1,c ;data
      inc r0
      setb p1.2 ;CLK
      clr p1.2
      djnz r6,hang5
      JNB P1.6, CON5
      INC R1
      DJNZ R5, LOP10
CON5:
      setb p1.0 ;RC
      clr p1.0
      mov p2,#02h
      lcall delay
      mov p2,#0ffh
      
      MOV R5, #6
      MOV R1, 08H
   LOP11:
      JNB P1.6, LOP11_C
      LCALL SOSANH
LOP11_C:
      mov r0,#0
      mov r6,1FH 
   JB P1.7, hang6
   ret
   hang6: 
      mov a,r0
      movc a,@a+dptr
      mov c,0e6h
      mov p1.1,c ;data
      inc r0
      setb p1.2 ;CLK
      clr p1.2
      djnz r6,hang6
      JNB P1.6, CON6
      INC R1
      DJNZ R5, LOP11
CON6:
      setb p1.0 ;RC
      clr p1.0
      mov p2,#01h
      lcall delay
      mov p2,#0ffh
      
      MOV R5, #6
      MOV R1, 08H
   LOP12:
      JNB P1.6, LOP12_C
      LCALL SOSANH
LOP12_C:
      mov r0,#0
      mov r6,1FH 
   JB P1.7, hang7
   ret
   hang7: 
      mov a,r0
      movc a,@a+dptr
      mov c,0e7h
      mov p1.1,c ;data
      inc r0
      setb p1.2 ;CLK
      clr p1.2
      djnz r6,hang7
      JNB P1.6, CON7
      INC R1
      DJNZ R5, LOP12
CON7:
      setb p1.0 ;RC
      clr p1.0
      mov p2,#00h
      lcall delay
      mov p2,#0ffh
   ret
;//////////////////////////////////////////////
delay: ; timer0 mode 1 500 us
   mov tmod,#21h
   mov TH0,#0fch
   mov TL0,#0d3h
   setb tr0
   here: jnb tf0, here
   clr tr0
   clr tf0
ret
;/////////////////////////////////////////////
ORG 500H
BIT_A: db 00H,078H,014H,012H,012H,014H,078H,00H ;A
ORG 508H
BIT_E: db 00H,07EH,04AH,04AH,04AH,04AH,04AH,000H ;E
ORG 516H
BIT_EMPTY: db 00h,00h,00h,00h,00h,00h,00h,00h
ORG 524H
BIT_B: db 000H,07EH,042H,04AH,04AH,04AH,034H,000H ;B
ORG 532H
BIT_C: db 00H,03CH,042H,042H,042H,042H,042H,00H ;C
ORG 540H
BIT_D: db 000H,07EH,042H,042H,042H,042H,03CH,000H ;D
ORG 548H
BIT_F: db 000H,07EH,00AH,00AH,00AH,00AH,00AH,000H;F
ORG 656H
BIT_G: db 000H,03CH,042H,042H,042H,052H,072H,000H; G
ORG 664H
BIT_H: db 000H,07EH,008H,008H,008H,008H,07EH,00H ;H
ORG 672H
BIT_I: db 000H, 00H,042H,07EH,042H,000H, 00H, 00H ;I
ORG 680H
BIT_J: db 000H,042H,042H,022H,01EH,002H,002H,000H;J
ORG 688H
BIT_K: db 000H,07EH,008H,014H,022H,040H,000H,000H;K
ORG 696H
BIT_L: db 000H,07EH,040H,040H,040H,040H,040H,000H;L
ORG 704H
BIT_M: db 000H,07EH,004H,008H,008H,004H,07EH,000H;M
ORG 712H
BIT_N: db 000H,07EH,004H,008H,010H,020H,07EH,000H;N
ORG 720H
BIT_O: db 000H,03CH,042H,042H,042H,042H,03CH,000H ;O
ORG 728H
BIT_P: db 000H,07EH,012H,012H,012H,012H,00CH,000H;P
ORG 736H
BIT_Q: db 000H,03CH,046H,04AH,052H,062H,0C2H,0BCH ;Q
ORG 744H
BIT_R: db 000H,07EH,012H,012H,012H,032H,04CH,000H;R
ORG 752H
BIT_S: db 000H,044H,04AH,04AH,04AH,04AH,032H,000H;S
ORG 760H
BIT_T: db 002H,002H,002H,07EH,002H,002H,002H, 00H ;T
ORG 768H
BIT_U: db 000H,03EH,040H,040H,040H,040H,03EH, 00H ;U
ORG 774H
BIT_V: db 00EH,010H,020H,040H,040H,020H,010H,00EH ;V
ORG 782H
BIT_W: db 000H,01EH,020H,040H,020H,040H,020H,01EH;W
ORG 790H
BIT_X: db 000H,042H,024H,008H,010H,024H,042H,000H;X
ORG 798H
BIT_Y: db 000H,002H,044H,028H,010H,008H,004H,002H ;Y
ORG 806H
BIT_Z: db 000H,042H,062H,052H,04AH,046H,042H,000H; Z
ORG 814H
BIT_0: DB 000H,03CH,046H,04AH,052H,062H,03CH,000H; 0
ORG 822H
BIT_1: DB 000H,000H,048H,044H,07EH,040H,040H,000H; 1
ORG 830H
BIT_2: DB 000H,000H,044H,062H,052H,04AH,044H,000H; 2
ORG 838H
BIT_3: DB 000H,000H,042H,04AH,04AH,04AH,034H,000H; 3
ORG 846H
BIT_4: DB 000H,030H,028H,024H,022H,07EH,020H,000H; 4
ORG 854H
BIT_5: DB 000H,04EH,04AH,04AH,04AH,04AH,032H,000H; 5
ORG 862H
BIT_6: DB 000H,03CH,04AH,04AH,04AH,04AH,030H,000H; 6
ORG 870H
BIT_7: DB 000H,002H,002H,072H,00AH,00AH,006H,000H; 7
ORG 878H
BIT_8: DB 000H,03CH,04AH,04AH,04AH,04AH,03CH,000H; 8
ORG 886H
BIT_9: DB 000H,004H,04AH,04AH,04AH,04AH,03CH,000H; 9
ORG 894H
Bitmap:
db 00h,00h,00h,00h,00h,00h,00h,00h
db 00EH,010H,020H,040H,040H,020H,010H,00EH ;V
db 000H,042H,07EH,042H,000H ;I
db 07EH,04AH,04AH,04AH,04AH,04AH,000H ;E
db 002H,002H,002H,07EH,002H,002H,002H ;T
db 000H ; Dau cach
db 000H,000H,07EH,002H,004H,008H,010H,07EH ;N
db 000H,078H,014H,012H,012H,014H,078H ;A
db 000H,07EH,002H,004H,008H,004H,002H,07EH ;M
db 000h,000h ; Dau cach
db 000H,03CH,046H,04AH,052H,062H,0C2H,0BCH ;Q
db 000H,03EH,040H,040H,040H,040H,03EH ;U
db 000H,002H,044H,028H,010H,008H,004H,002H ;Y
db 000h,07EH,04AH,04AH,04AH,04AH,04AH,000H ;E
db 002H,002H,002H,07EH,002H,002H,002H ;T
db 000h,000h,000h ; Dau cach
db 002H,002H,002H,07EH,002H,002H,002H ;T
db 000H,07EH,008H,008H,008H,008H,07EH ;H
db 000H,078H,014H,012H,012H,014H,078H ;A
db 000H,07EH,002H,004H,008H,010H,07EH ;N
db 000H,03CH,042H,042H,042H,052H,072H ;G
db 000H
db 000H,000H,07EH,042H,042H,042H,042H,03CH ;D
db 000H,078H,014H,012H,012H,014H,078H ;A
db 000H,042H,07EH,042H,000H ;I
db 000H,000H,07EH,042H,042H,042H,042H,03CH ;D
db 000H,042H,07EH,042H,000H ;I
db 03CH,042H,042H,042H,042H,042H ;C
db 000H,07EH,008H,008H,008H,008H,07EH ;H
db 000h,000h,000h ; Dau cach
db 03CH,042H,042H,042H,042H,042H ;C
db 000H,03CH,042H,042H,042H,042H,03CH,000H ;O
db 00EH,010H,020H,040H,040H,020H,010H,00EH ;V
db 000H,042H,07EH,042H,000H ;I
db 07EH,042H,042H,042H,042H,03CH ;D
db 000H,000H,010H,010H,010H,010H,000H ;-
db 000H,044H,07EH,040H,000H ;1
db 05EH,052H,052H,052H,07EH ;9
; End of Bitmap
END